syntax = "proto3";
option go_package = "pb";


import "proto/contract.proto";
import "proto/order.proto";
import "proto/profile.proto";
import "proto/google/protobuf/timestamp.proto";

// This schema is used for the /ob/listing api call structure
// We use protobuf for this instead of a basic struct because
// the listing object is in protobuf and we can't mix types. Also
// we want to avoid putting fields in the contract that are only
// used by the api.

message Coupon {
    string hash = 1;
    string code = 2;
}

message OrderRespApi {
    RicardianContract contract                            = 1;
    OrderState state                                      = 2;
    bool read                                             = 3;
    bool funded                                           = 4;
    uint64 unreadChatMessages                             = 5;
    repeated TransactionRecord paymentAddressTransactions = 6;
    TransactionRecord refundAddressTransaction            = 7;
}

message CaseRespApi {
    google.protobuf.Timestamp timestamp            = 1;
    RicardianContract buyerContract                = 2;
    RicardianContract vendorContract               = 3;
    repeated string buyerContractValidationErrors  = 4;
    repeated string vendorContractValidationErrors = 5;
    OrderState state                               = 6;
    bool read                                      = 7;  /** Whether or not the message has been read */
    bool buyerOpened                               = 8;
    string claim                                   = 9;
    uint64 unreadChatMessages                      = 10;
    DisputeResolution resolution                   = 11;
}

message TransactionRecord {
    string txid                         = 1;  /** The unique transactionRecord ID. */
    int64 value                         = 2;
    uint32 confirmations                = 3;
    uint32 height                       = 4;
    google.protobuf.Timestamp timestamp = 5;
}

message PeerAndProfile {
    string peerId   = 1; /** The unique CIDv0 ipfs node identifer. */
    Profile profile = 2;
}

message PeerAndProfileWithID {
    string id       = 1; /** The unique profile ID. */
    string peerId   = 2; /** The unique CIDv0 ipfs node identifer. */
    Profile profile = 3; /** The profile */
}

message RatingWithID {
    string id       = 1;  /** The unique Rating ID. */
    string ratingId = 2;
    Rating rating   = 3;
}